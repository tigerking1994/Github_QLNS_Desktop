using System;
using System.Collections.Generic;
using System.Data;
using System.Linq.Expressions;
using VTS.QLNS.CTC.Core.Domain;
using VTS.QLNS.CTC.Core.Domain.Query;

namespace VTS.QLNS.CTC.Core.Service
{
    public interface ITlBangLuongThangService
    {
        int Add(IEnumerable<TlBangLuongThang> entity);
        IEnumerable<TlDmCanBo> FindCbLuong(decimal? thang, decimal? nam, string maDonVi);
        IEnumerable<TlBangLuongThang> FindAll();
        IEnumerable<TlDmThueThuNhapCaNhan> FindThue(bool bIsThueThang = true);
        IEnumerable<TlBangLuongThang> FindByParentId(Guid parentId);
        int DeleteByParentId(Guid parentId);
        int AddRange(IEnumerable<TlBangLuongThang> entities);
        int AddOrUpdateRange(IEnumerable<TlBangLuongThang> entities);
        int UpdateRange(IEnumerable<TlBangLuongThang> entities);
        int Delete(TlBangLuongThang entity);
        int Update(TlBangLuongThang entity);
        IEnumerable<TlBangLuongThang> FindByCondition(Expression<Func<TlBangLuongThang, bool>> predicate);
        DataTable ReportBangKeTrichThueTNCN(int thang, int nam, string maCachTl, string maDonVi, int donViTinh, bool isExportAll, bool isOrderChucVu);
        DataTable ReportBangKeTrichThueTNCNSummary(int thang, int nam, string maCachTl, List<TlDmDonVi> tlDmDonVis, int donViTinh, bool isExportAll, bool isOrderChucVu);
        DataTable GetDataReportGiaiThichLuongChiTiet(List<TlDmDonVi> lstDonVi, int thang, int nam, string maCachTl, int donViTinh, bool isSummary);
        DataTable ReportGiaiThichLuongChiTiet(TlDmDonVi donVi, DataTable data, string maCachTl);
        DataTable ReportGiaiThichLuongChiTiet(DataTable data, string maCachTl);
        DataTable ReportGiaiThichChiTietPhuCapKhac(List<TlDmDonVi> lstDonVi, List<TlDmPhuCap> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu, bool isReducebackPay = false);
        DataTable ReportGiaiThichChiTietPhuCapTruyLinhKhac(List<TlDmDonVi> lstDonVi, List<TlDmPhuCap> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichPhuCapTheoNgay(List<TlDmDonVi> lstDonVi, List<TlDmPhuCap> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichSoNgayPhuCapTheoNgay(List<TlDmDonVi> lstDonVi, List<TlDmPhuCap> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichChiTietPhuCapTNVKTHD(List<TlDmDonVi> lstDonVi, int nam, int thang, string maCachTl, int donViTinh);
        DataTable ReportBangLuongTruyLinhDongPhuCap(List<TlDmDonVi> lstDonVi, List<TlDmPhuCap> lstPhuCap, int nam, int thang, string maCachTl, bool isTruyLinh, int donViTinh, bool isOrderChucVu);
        Dictionary<string, List<ReportBangLuongTruyLinhDongPhuCapQuery>> ReportBangLuongTruyLinhDongPhuCap(DataTable data, TlDmDonVi donVi, List<TlDmPhuCap> lstPhuCap, bool isTruyLinh);
        Dictionary<string, List<ReportBangLuongTruyLinhDongPhuCapQuery>> ReportBangLuongTruyLinhDongPhuCapSummary(DataTable data, List<TlDmPhuCap> lstPhuCap, bool isTruyLinh);
        DataTable ReportBangLuongThangDong(List<TlDmDonVi> listDonVi, int thang, int nam, bool isOrderChucVu, List<string> lstColumnInclude);
        DataTable GetDataBangLuongThang(List<TlDmDonVi> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong, bool isInCanBoMoi, bool isReduceBackPay = false);
        DataTable ReportBangLuongThang(List<TlDmDonVi> listDonVi, int thang, int nam, int donViTinh, bool isOrderChucVu, bool isGiaTriAm, Dictionary<string, string> dsNgach, bool isCheckedMaHuongLuong, bool isReduceBHXH);
        DataTable ReportBangLuongThangTheoDonVi(List<TlDmDonVi> listDonVi, int thang, int nam, int donViTinh, bool isOrderChucVu, bool isGiaTriAm, Dictionary<string, string> dsNgach, bool isCheckedMaHuongLuong, bool isReduceBHXH);
        DataTable ReportBangLuongThang(TlDmDonVi donVi, DataTable data, int donViTinh, bool isOrderChucVu, Dictionary<string, string> dsNgach);
        DataTable ReportBangLuongThangDoc(TlDmDonVi donVi, DataTable data);
        DataTable ReportBangLuongThang(DataTable data, int donViTinh, Dictionary<string, string> dsNgach);
        DataTable ReportBangLuongTruyLinh(TlDmDonVi donVi, DataTable data, int donViTinh);
        DataTable ReportBangLuongTruyLinhSummary(DataTable data, int donViTinh);
        DataTable ReportBangLuongTruyLinh(DataTable data, int donViTinh);
        DataTable ReportThueThuNhapCaNhanNam(string maDonVi, int donViTinh, bool printAll, int Nam, bool isOrderChucVu);
        DataTable GetDataLuongThang(Guid id);
        DataTable ReportInKiem(int nam, int thang, string maDonVi, int donViTinh);
        DataTable ReportQtQuanSo(Expression<Func<TlQsChungTuChiTiet, bool>> predicate, List<TlDmDonVi> list);
        List<TlQsChungTuChiTiet> FindChungTuChiTiet(Expression<Func<TlQsChungTu, bool>> predicate);
        IEnumerable<TlQsChungTuChiTiet> FindQuyetToanQuanSo(string idDonVi, string thang, int nam, string thangTruoc, int namTruoc);
        DataTable GetDataReportDanhSachChiTraNganHang(List<TlDmDonVi> lstDonVi, int nam, int thang, bool isReduceBHXH);
        DataTable ReportDanhSachChiTraNganHang(TlDmDonVi donVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ReportDanhSachChiTraNganHang(List<TlDmDonVi> lstDonVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ReportDanhSachChiTraNganHangCaNhan(List<TlDmDonVi> lstDonVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ExportTongHopLuongTheoNgach(int thang, int nam, List<TlDmDonVi> listDonVi, string maCachTl, int donViTinh, bool isSummary, bool isReduceBHXH);
        DataTable ExportGiaiThichPhaiTru(string maCanBo, string maPhuCap);
        IEnumerable<TlRptDienBienLuongQuery> GetDataBangLuong();
        public List<TlQsChungTuChiTiet> FindChungTuChiTietSummary(Expression<Func<TlQsChungTu, bool>> predicate, List<String> listDonVi);
        void BulkInsert(IEnumerable<TlBangLuongThang> entities);
        DataTable ExportBaoCaoTienAn(Expression<Func<TlBangLuongThang, bool>> predicate, List<TlDmDonVi> listDonVi, int donViTinh);
        IEnumerable<TlBangLuongThangDongQuery> ReportBangLuongThangDong(string maDonVi, string ngach, string maPhuCap, int thang, int nam);
        DataTable ReportBangLuongThangDoc(string maDonVi, string ngach, string maPhuCap, int thang, int nam);
        Dictionary<string, object> ReportBangLuongThangDongData(List<TlBangLuongThangDongQuery> lstTlBangLuongThangDong, List<TlBangLuongThangDongQuery> lstHslCb, List<TlDmDonVi> lstDonVi, int i, int totalPage);
        //Dictionary<string, object> ReportBangLuongThangDocData(List<TlBangLuongThangDocQuery> lstTlBangLuongThangDoc, List<TlDmDonVi> lstDonVi, int i, int totalPage);
        List<TlRptTruyLinhChuyenCheDoQuery> ExportTruyLinhChuyenCheDo(Expression<Func<TlDmCanBo, bool>> predicate, string maDonVi, int thang, int nam, bool isOrderChucVu);
        DataTable ReportDienBienLuong(string maHieuCanBo, DateTime tuNgay, DateTime denNgay);
        DataTable ExportTongHopLuongTheoDonVi(int thang, int nam, List<TlDmDonVi> listDonVi, string maCachTl, int donViTinh, bool isReduceBHXH);
        DataTable ExportTongHopLuongTheoNgachDonVi(int thang, int nam, List<TlDmDonVi> listDonVi, string maCachTl, int donViTinh, bool isReduceBHXH);
        IEnumerable<TlBangLuongThangQuery> GetDataInsert(int thang, int nam, string maDonVi, string maCachTl, int soNgay);
        IEnumerable<TlBangLuongThangQuery> GetDataInsertBhxh(int thang, int nam, string maDonVi, string maCachTl, int soNgay);
        DataTable GetDataBangLuongTruyLinh(List<TlDmDonVi> listDonVi, int thang, int nam, bool isTruyLinh, bool isOrderChucVu);
        DataTable GetDataDanhSachCapPhat(List<TlDmDonVi> listDonVi, int thang, int nam);
        DataTable ReportThueThuNhapCaNhanNamSummary(List<TlDmDonVi> lstDonVi, int donViTinh, bool printAll, int Nam, bool isOrderChucVu);
        DataTable ReportGiaiThichChiTietPhuCapHsqCs(List<TlDmDonVi> lstDonVi, int nam, int thang, int donViTinh);
        DataTable ExportBaoCaoTienAn(DataTable data, List<TlDmPhuCap> lstPhuCap);
        DataTable GetDataTienAn(int thang, int nam, string maDonVi);
        DataTable GetDataTienAn(DataTable data, string maDonVi, List<TlDmPhuCap> lstPhuCap);
        DataTable GetDataBangLuongPhuCapTongHopBienPhong(List<TlDmDonVi> lstDonVi, int thang, int nam);
        DataTable ReportChiTraNganHangThuNhapKhac(List<TlDmDonVi> listDonVi, int thang, int nam, bool isSummary, bool isOrderChucVu);
        DataTable GetDataRaQuanXuatNgu(List<TlDmDonVi> listDonVi, int thang, int nam, int donViTinh);
        DataTable ReportGiaiThichBienPhong(string maDonVi, int nam, int thang, int donViTinh, string maPhuCap);
        DataTable ReportGiaiThichBienPhongTheoHeSo(string maDonVi, int nam, int thang, int donViTinh, string maPhuCap, string maPhuCapTien);
        DataTable ReportDanhSachChiTraNganHangTongHopTheoDonVi(int nam, int thang, int donViTinh, string sNoiDung, bool isReduceBHXH, List<TlDmDonVi> tlDmDonVis);
        DataTable ReportDanhSachChiTraNganHang(int nam, int thang, int donViTinh, string sNoiDung, bool isReduceBHXH, params TlDmDonVi[] tlDmDonVis);
        TlBangLuongThang GetMonthlySalary(string maCanBo, string maPhuCap, int? thang, int? nam);
        TlBangLuongThang GetLatestSalary(string maCanBo, int? thang, int? nam);
        DataTable GetDataBangLuongThangTruBHXH(List<TlDmDonVi> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong, bool isInCanBoMoi, bool isReduceBackPay = false);
        DataTable ReportBangLuongThangTheoDonViTruBHXH(List<TlDmDonVi> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong);
        IEnumerable<TlBangLuongThangQuery> GetDataInsertTruyThu(Guid iIdBangLuong, int thang, int nam, string maDonVi);
        int CleanupData();
    }
}
