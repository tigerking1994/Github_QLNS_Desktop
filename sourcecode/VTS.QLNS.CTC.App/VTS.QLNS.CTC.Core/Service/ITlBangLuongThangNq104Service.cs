using System;
using System.Collections.Generic;
using System.Data;
using System.Linq.Expressions;
using VTS.QLNS.CTC.Core.Domain;
using VTS.QLNS.CTC.Core.Domain.Query;

namespace VTS.QLNS.CTC.Core.Service
{
    public interface ITlBangLuongThangNq104Service
    {
        int Add(IEnumerable<TlBangLuongThangNq104> entity);
        IEnumerable<TlDmCanBoNq104> FindCbLuong(decimal? thang, decimal? nam, string maDonVi);
        IEnumerable<TlBangLuongThangNq104> FindAll();
        IEnumerable<TlDmThueThuNhapCaNhanNq104> FindThue(bool bIsThueThang = true);
        IEnumerable<TlBangLuongThangNq104> FindByParentId(Guid parentId);
        int DeleteByParentId(Guid parentId);
        int AddRange(IEnumerable<TlBangLuongThangNq104> entities);
        int AddOrUpdateRange(IEnumerable<TlBangLuongThangNq104> entities);
        int UpdateRange(IEnumerable<TlBangLuongThangNq104> entities);
        int Delete(TlBangLuongThangNq104 entity);
        int Update(TlBangLuongThangNq104 entity);
        IEnumerable<TlBangLuongThangNq104> FindByCondition(Expression<Func<TlBangLuongThangNq104, bool>> predicate);
        DataTable ReportBangKeTrichThueTNCN(int thang, int nam, string maCachTl, string maDonVi, int donViTinh, bool isExportAll, bool isOrderChucVu);
        DataTable ReportBangKeTrichThueTNCNSummary(int thang, int nam, string maCachTl, List<TlDmDonViNq104> tlDmDonVis, int donViTinh, bool isExportAll, bool isOrderChucVu);
        DataTable GetDataReportGiaiThichLuongChiTiet(List<TlDmDonViNq104> lstDonVi, int thang, int nam, string maCachTl, int donViTinh, bool isSummary);
        DataTable ReportGiaiThichLuongChiTiet(TlDmDonViNq104 donVi, DataTable data, string maCachTl);
        DataTable ReportGiaiThichLuongChiTiet(DataTable data, string maCachTl);
        DataTable ReportGiaiThichChiTietPhuCapKhac(List<TlDmDonViNq104> lstDonVi, List<TlDmPhuCapNq104> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichChiTietPhuCapTruyLinhKhac(List<TlDmDonViNq104> lstDonVi, List<TlDmPhuCapNq104> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichPhuCapTheoNgay(List<TlDmDonViNq104> lstDonVi, List<TlDmPhuCapNq104> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichSoNgayPhuCapTheoNgay(List<TlDmDonViNq104> lstDonVi, List<TlDmPhuCapNq104> listPhuCap, int nam, int thang, string maCachTl, int donViTinh, bool isOrderChucVu);
        DataTable ReportGiaiThichChiTietPhuCapTNVKTHD(List<TlDmDonViNq104> lstDonVi, int nam, int thang, string maCachTl, int donViTinh);
        DataTable ReportBangLuongTruyLinhDongPhuCap(List<TlDmDonViNq104> lstDonVi, List<TlDmPhuCapNq104> lstPhuCap, int nam, int thang, string maCachTl, bool isTruyLinh, int donViTinh, bool isOrderChucVu);
        Dictionary<string, List<ReportBangLuongTruyLinhDongPhuCapNq104Query>> ReportBangLuongTruyLinhDongPhuCap(DataTable data, TlDmDonViNq104 donVi, List<TlDmPhuCapNq104> lstPhuCap, bool isTruyLinh);
        Dictionary<string, List<ReportBangLuongTruyLinhDongPhuCapNq104Query>> ReportBangLuongTruyLinhDongPhuCapSummary(DataTable data, List<TlDmPhuCapNq104> lstPhuCap, bool isTruyLinh);
        DataTable ReportBangLuongThangDong(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isOrderChucVu, List<string> lstColumnInclude);
        DataTable GetDataBangLuongThang(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong, bool isInCanBoMoi, decimal tyLeHuong = 0);
        DataTable ReportBangLuongThang(List<TlDmDonViNq104> listDonVi, int thang, int nam, int donViTinh, bool isOrderChucVu, bool isGiaTriAm, Dictionary<string, string> dsNgach, bool isCheckedMaHuongLuong, bool isReduceBHXH, decimal tyLeHuong=0);
        DataTable ReportBangLuongThangTheoDonVi(List<TlDmDonViNq104> listDonVi, int thang, int nam, int donViTinh, bool isOrderChucVu, bool isGiaTriAm, Dictionary<string, string> dsNgach, bool isCheckedMaHuongLuong, bool isReduceBHXH , decimal tyLeHuong = 0);
        DataTable ReportBangLuongThang(TlDmDonViNq104 donVi, DataTable data, int donViTinh, bool isOrderChucVu, Dictionary<string, string> dsNgach);
        DataTable ReportBangLuongThangDoc(TlDmDonViNq104 donVi, DataTable data);
        DataTable ReportBangLuongThang(DataTable data, int donViTinh, Dictionary<string, string> dsNgach);
        DataTable ReportBangLuongTruyLinh(TlDmDonViNq104 donVi, DataTable data, int donViTinh);
        DataTable ReportBangLuongTruyLinhSummary(DataTable data, int donViTinh);
        DataTable ReportBangLuongTruyLinh(DataTable data, int donViTinh);
        DataTable ReportThueThuNhapCaNhanNam(string maDonVi, int donViTinh, bool printAll, int Nam, bool isOrderChucVu);
        DataTable GetDataLuongThang(Guid id);
        DataTable ReportInKiem(int nam, int thang, string maDonVi, int donViTinh);
        DataTable ReportQtQuanSo(Expression<Func<TlQsChungTuChiTietNq104, bool>> predicate, List<TlDmDonViNq104> list);
        List<TlQsChungTuChiTietNq104> FindChungTuChiTiet(Expression<Func<TlQsChungTuNq104, bool>> predicate);
        IEnumerable<TlQsChungTuChiTietNq104> FindQuyetToanQuanSo(string idDonVi, string thang, int nam, string thangTruoc, int namTruoc);
        DataTable GetDataReportDanhSachChiTraNganHang(List<TlDmDonViNq104> lstDonVi, int nam, int thang);
        DataTable ReportDanhSachChiTraNganHang(TlDmDonViNq104 donVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ReportDanhSachChiTraNganHang(List<TlDmDonViNq104> lstDonVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ReportDanhSachChiTraNganHangCaNhan(List<TlDmDonViNq104> lstDonVi, DataTable data, int donViTinh, bool isSummary, bool isShowName);
        DataTable ExportTongHopLuongTheoNgach(int thang, int nam, List<TlDmDonViNq104> listDonVi, string maCachTl, int donViTinh, bool isSummary);
        DataTable ExportGiaiThichPhaiTru(string maCanBo, string maPhuCap);
        IEnumerable<TlRptDienBienLuongNq104Query> GetDataBangLuong();
        public List<TlQsChungTuChiTietNq104> FindChungTuChiTietSummary(Expression<Func<TlQsChungTuNq104, bool>> predicate, List<String> listDonVi);
        void BulkInsert(IEnumerable<TlBangLuongThangNq104> entities);
        DataTable ExportBaoCaoTienAn(Expression<Func<TlBangLuongThangNq104, bool>> predicate, List<TlDmDonViNq104> listDonVi, int donViTinh);
        IEnumerable<TlBangLuongThangDongNq104Query> ReportBangLuongThangDong(string maDonVi, string ngach, string maPhuCap, int thang, int nam);
        DataTable ReportBangLuongThangDoc(string maDonVi, string ngach, string maPhuCap, int thang, int nam);
        Dictionary<string, object> ReportBangLuongThangDongData(List<TlBangLuongThangDongNq104Query> lstTlBangLuongThangDong, List<TlBangLuongThangDongNq104Query> lstHslCb, List<TlDmDonViNq104> lstDonVi, int i, int totalPage);
        //Dictionary<string, object> ReportBangLuongThangDocData(List<TlBangLuongThangDocQuery> lstTlBangLuongThangDoc, List<TlDmDonVi> lstDonVi, int i, int totalPage);
        List<TlRptTruyLinhChuyenCheDoNq104Query> ExportTruyLinhChuyenCheDo(Expression<Func<TlDmCanBoNq104, bool>> predicate, string maDonVi, int thang, int nam, bool isOrderChucVu);
        DataTable ReportDienBienLuong(string maHieuCanBo, DateTime tuNgay, DateTime denNgay);
        DataTable ExportTongHopLuongTheoDonVi(int thang, int nam, List<TlDmDonViNq104> listDonVi, string maCachTl, int donViTinh);
        DataTable ExportTongHopLuongTheoNgachDonVi(int thang, int nam, List<TlDmDonViNq104> listDonVi, string maCachTl, int donViTinh);
        IEnumerable<TlBangLuongThangNq104Query> GetDataInsert(int thang, int nam, string maDonVi, string maCachTl, int soNgay);
        IEnumerable<TlBangLuongThangNq104Query> GetDataInsertBhxh(int thang, int nam, string maDonVi, string maCachTl, int soNgay);
        DataTable GetDataBangLuongTruyLinh(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isTruyLinh, bool isOrderChucVu);
        DataTable GetDataDanhSachCapPhat(List<TlDmDonViNq104> listDonVi, int thang, int nam);
        DataTable ReportThueThuNhapCaNhanNamSummary(List<TlDmDonViNq104> lstDonVi, int donViTinh, bool printAll, int Nam, bool isOrderChucVu);
        DataTable ReportGiaiThichChiTietPhuCapHsqCs(List<TlDmDonViNq104> lstDonVi, int nam, int thang, int donViTinh);
        DataTable ExportBaoCaoTienAn(DataTable data, List<TlDmPhuCapNq104> lstPhuCap);
        DataTable GetDataTienAn(int thang, int nam, string maDonVi);
        DataTable GetDataTienAn(DataTable data, string maDonVi, List<TlDmPhuCapNq104> lstPhuCap);
        DataTable GetDataBangLuongPhuCapTongHopBienPhong(List<TlDmDonViNq104> lstDonVi, int thang, int nam);
        DataTable ReportChiTraNganHangThuNhapKhac(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isSummary, bool isOrderChucVu);
        DataTable GetDataRaQuanXuatNgu(List<TlDmDonViNq104> listDonVi, int thang, int nam, int donViTinh);
        DataTable ReportGiaiThichBienPhong(string maDonVi, int nam, int thang, int donViTinh, string maPhuCap);
        DataTable ReportGiaiThichBienPhongTheoHeSo(string maDonVi, int nam, int thang, int donViTinh, string maPhuCap, string maPhuCapTien);
        DataTable ReportDanhSachChiTraNganHangTongHopTheoDonVi(int nam, int thang, int donViTinh, string sNoiDung, List<TlDmDonViNq104> tlDmDonVis);
        DataTable ReportDanhSachChiTraNganHang(int nam, int thang, int donViTinh, string sNoiDung, params TlDmDonViNq104[] tlDmDonVis);
        TlBangLuongThangNq104 GetMonthlySalary(string maCanBo, string maPhuCap, int? thang, int? nam);
        TlBangLuongThangNq104 GetLatestSalary(string maCanBo, int? thang, int? nam);
        DataTable GetDataBangLuongThangTruBHXH(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong, bool isInCanBoMoi, decimal tyLeHuong = 0);
        DataTable ReportBangLuongThangTheoDonViTruBHXH(List<TlDmDonViNq104> listDonVi, int thang, int nam, bool isOrderChucVu, bool isGiaTriAm, bool isCheckedMaHuongLuong);
        IEnumerable<TlBangLuongThangNq104> FindBangLuongThangByCondition(string maDonVi, int? thang, int? nam, string maCachTL, string maHieuCanBo);
        List<TlBangLuongThangNq104> FindLuongThangCanBo(int? thang, int? nam, string maDonVi, Guid id, string maCach);
    }
}
